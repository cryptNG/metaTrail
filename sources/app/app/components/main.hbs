
<style>
	#drop_box_input{
		visibility: hidden;
		    width: 0;
	}

.inputbox{
  width: 75%;
  flex-direction: row;
  display: flex;
  color: darkgray;
  position: relative;
}

@media only screen and (max-width: 600px) {
  .inputbox{
    width: 100%;
  }
}

.inputbox button.btn-clear-input {
    position: relative;
    right: 25px;
    background-color: #ffffff;
    box-shadow: 0px 0px 5px 5px #ffffffa0;
    border: 0;
    padding: 2px 5px;
    cursor: pointer;
    z-index: 101;
    opacity: 0;
    line-height: 1em;
    height: 1em;
    margin-top: 1em;
		
}

.inputbox button.btn-clear-input.active {
	opacity: 1;
	transition: all 0.5s ease-in-out;
}


input[type="text"].custom-input {
  width: 100%;
 /* border: 2px solid #aaa;*/
 border: none;
  border-radius: 10px;
  outline: none;
  box-shadow: -6px 6px 6px 3px rgba(0, 0, 0, 0.22);
	z-index: 100;
  padding: 5px 12px;
  box-sizing: border-box;
  transition: 0.3s;
	    line-height: 3em;
    height: 3em;
		transition: width 0.5s ease-in-out;
}
input[type="text"].custom-input::placeholder {
  color: rgb(0, 0, 0);
  opacity: 0.5;
  text-align: center;
}
input[type="text"].custom-input:focus::placeholder{
  color: transparent;

}

input[type="text"].custom-input ~ label {
    position: absolute;
    top: 10px;
		opacity: 1;
		z-index: 1020;
		transition: all 0.5s ease-in-out;
    cursor: text;
        text-align: center;
    display: block;
    width: 100%;

}
@media only screen and (max-width: 600px){
  input[type="text"].custom-input ~ label {
    font-size:smaller;
  }
}
input[type="text"].custom-input:focus ~ label,
input[type="text"].custom-input.active ~ label  {
    opacity: 1;
		top: -25px;
		left:10px;
    color: #c9ffff;
		text-shadow: 1px 1px 3px black;
    
}

.inputbox button.action-btn{
  text-decoration: none;
  background-color: #f0ffff;
  opacity: 1;
  color: #000000;
  padding: 12px;
  border:none;
  outline: none;
  transition: 0.3s;
	position: relative;
    right: 19px;
		cursor: pointer;
		width: 50px;
		height: 3em;
		display: flex;
		justify-content: start;
		overflow: hidden;
		min-width: 50px;
		transition: all 0.5s ease-in-out;
		z-index: 103;
}

.inputbox button.action-btn span{
	opacity: 0;
	transition: all 0.3s ease-in-out;
	position: absolute;
	margin-left: 0px;
	white-space: nowrap;
	color: white;
}

.inputbox button.action-btn svg {
        position: absolute;
    right: 7px;
    top: 6px;
}



.inputbox button.action-btn.end{
  border-radius: 0px 10px 10px 0px;
	box-shadow: 6px 6px 6px 3px rgb(0 0 0 / 22%), 0 4px 4px 0 rgb(0 0 0 / 35%);
	border-left: 1px solid gray;

}

.inputbox button.action-btn.not-minting:hover{
  
  text-decoration: none;
  background-color: rgba(77, 152, 86,0.8);;
  color: #ffffff;
	min-width: 320px;
	
}

.inputbox button.action-btn.not-minting:hover{
  
  text-decoration: none;
  background-color: rgba(77, 152, 86,0.8);;
  color: #ffffff;
	min-width: 320px;
	
}

.inputbox button.action-btn.not-minting:hover + label{
	left:10px;
	width: calc(100% - 360px);
	overflow: hidden;
	white-space: nowrap;
	
}

.inputbox button.action-btn.not-minting:hover + label.active{

	width: calc(100% );
	
}

.inputbox button.action-btn.not-minting:hover span{
	opacity: 1;
	margin-left: 5px;
	
}

.inputbox button.action-btn:hover svg {
 
    left: auto;
}

.inputbox button:focus.action-btn:hover{
  
  text-decoration: none;
  background-color: rgba(88, 161, 78, 0.781);;
  color: #a71a1ab6;
}

.splitter-text{
  text-align: center;
  align-items: center;
  align-self: center;
  padding: 15px;
  color: white;
}

.page.has-results .splitter-text{
	padding: 5px 15px;
}
.together{
  flex-direction: row;
  color: darkslategrey;
  font-weight: normal;
  display: flex;
  font-family: 'Quicksand';
  text-align: center;
  width:calc( 80% - 10px);
  flex-wrap: nowrap;
  justify-content: space-between;
  position: relative;
  left: -8px;
}

@media only screen and (max-width: 600px) {
  .together{
    flex-direction: column;
    width: calc( 90%);
    margin-left: 30px;
    margin-right: 10px;
  }
}
.middle {
  position: relative;
  left: -8px;
  font-size: 1.3em;
  margin: 20px;
  text-shadow: 1px 1px 2px #000000a0;
}

.page.has-results .middle {
	margin:5px 20px;
}

.together button.btn{
  width: 25%;
  border-radius: 8px;
  text-decoration: none;
  background-color: #097a9c;
  opacity: 1;
  color: #ffffff;
  padding: 10px 20px;
  border: none;
  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.22), 0 4px 4px 0 rgba(0, 0, 0, 0.35);
cursor: pointer;
  outline: 1px solid #0303038c;
  outline: none;
  transition: 0.3s;
	
}

@media only screen and (max-width: 600px) {
  .together button.btn{
    width: calc(100% - 19px);
    top: 10px;
    position: relative;
  }
}

.page.has-results .together button.btn{
	height: 3em;
}


.together button.btn.mint[disabled="true"]{
	background-color: rgba(128, 128, 128, 0.244);
}


.together button.btn:disabled{
	background-color: rgba(128, 128, 128, 0.677);
}

.together button.btn:hover{
  
  text-decoration: none;
  background-color: #ffffff;
  color: #000000;
  padding: 10px 20px;
  border: none;
  outline: 1px solid #099c298c;
}

.together button.btn:hover:disabled{
	background-color: gray;
	cursor: not-allowed;
	color: lightgray;
	outline: none;
}

.together .btn span{
	display: block;
	position: relative;
      font-size: 1.2em;
}

.together .btn span:after {
    content: "||";
    position: absolute;
    right: -10px;
    font-size: 2em;
    top: -10px;
    color: #85e3ff;
}

.together .btn:disabled span:after {
	color: lightgrey;
}
 
 span.invalid-message {
    position: absolute;
		opacity: 0;
    top: 45px;
    left: 10px;
    color: red;
    font-weight: bold;
    /* text-shadow: 1px 1px 5px black; */
    padding: 4px;
    border: 1px solid gray;
    border-radius: 6px;
    background-color: lightgoldenrodyellow;
    letter-spacing: 1px;
    word-spacing: 2px;
    font-size: 0.9em;
		transition: all 0.3s ease-in-out;
}

span.invalid-message.active {
	opacity: 1;
}
</style>
<DashBar></DashBar>
<div class="page">
  <World/>
  {{#if this.isAppReady}}
    <div class="together">
    
    <div class="inputbox">
		  <input type="file" id="drop_box_input" name="drop_box_input">
	    <input id="message_input" name="message_input" disabled="{{unless  this.walletConnect.isConnected 'true'}}" class="custom-input{{if this.hasValueInserted ' active'}}" type="text" placeholder="" value={{this.enteredMessage}} {{on 'keyup' this.updateEnteredMessage}} >
	    <span class="invalid-message{{if this.invalidMessage ' active'}}">{{#if this.invalidMessage}}{{this.invalidMessage}}{{/if}}</span>
	    <button class="btn-clear-input{{if this.hasValueInserted ' active'}}" type="button" {{on 'click' this.clearMessage}}>X</button>

      <label for="message_input" class="{{if this.enteredHashData.hashData ' active'}}">Leave Message @ [{{this.posMessage}}]</label>
    </div>
    {{#if this.hasValidMessage}}
      {{#if this.hasMessages}}
          {{#if this.hasOwnCache}}
            <button class="btn mint" type="button" {{action this.mintMessage}}><span><Ux::InlineLoader @active={{this.isMinting}}/>LEAVE MESSAGE</span></button>
          {{else}}
            <button class="btn mint" type="button" {{action this.mintMessage}}><span><Ux::InlineLoader @active={{this.isMinting}}/>CREATE CACHE</span></button>
          {{/if}}
      {{else}} 
        <button class="btn mint" type="button" {{action this.mintMessage}}><span><Ux::InlineLoader @active={{this.isMinting}}/>CLAIM SPOT</span></button>
      {{/if}}
    {{else}}
        {{#if this.hasMessages}}
          {{#if this.hasOwnCache}}
          <button class="btn mint" disabled='true' type="button"><span><Ux::InlineLoader @active={{this.isMinting}}/>LEAVE MESSAGE</span></button>
          {{else}}
          <button class="btn mint" disabled='true' type="button"><span><Ux::InlineLoader @active={{this.isMinting}}/>CREATE CACHE</span></button>
          {{/if}}
        {{else}} 
          <button class="btn mint" disabled='true' type="button"><span><Ux::InlineLoader @active={{this.isMinting}}/>CLAIM SPOT</span></button>
      {{/if}}
    {{/if}}
    </div>



  {{/if}}

  
  {{#if this.isAppReady}}

    <div class="results-showcase{{if this.hasMessages ' has-results'}}">
      <div class="results">
        {{#each this.locationCaches as |cache|}}
          <CollapsibleCacheElement @tokenId={{cache.tokenId}} @title={{cache.title}} @author={{cache.author}} @unlocked={{cache.unlocked}} @quantity={{cache.quantity}} @isOwn={{this.hasOwnCache}} @unlockAction={{fn this.unlockCache cache.tokenId}}/>
        {{/each}}
        
      </div>

    </div>
  {{else}}
    <Ux::InlineLoader @active={{this.positioning.isTracking}}/>
  {{/if}}
  {{#unless this.positioning.isTracking}}
  <div class="cacheName">
    Press START to begin location tracking
  </div>
  {{/unless}}
 
  <div class="bottom">
    {{#if (not this.positioning.isTracking)}}

      {{#if this.displayGeoLocationRequestButton}}
      <button class="mobile" type="button" {{on 'click' this.showHowToRequestGeoLocationPermission}}>
        PLEASE ENABLE GEOLOCATION
      </button>
      {{else}}
      {{!-- <button class="mobile" type="button" {{on 'click' this.setUserLocation}}>
        START
      </button> --}}
      {{/if}}
    {{else if (not this.isAppReady)}}
      <div class="cacheName">
      {{this.bigStatus}}
      </div>
    {{else}}
    
    {{/if}}
  </div>
</div>
<div class="footer">
  CopyRight:
  <a href="https://cryptng.com">
    CryptNG
  </a>
  - this service is in development!
</div>
<StatusBar @message={{this.statusMessage}}></StatusBar>

{{#if this.isShowingEnableGeoLocationModal}}
  <ModalDialog @onClose={{action "reloadWindow"}} @targetAttachment="center" @translucentOverlay={{true}}>
    <div class="modal">
  Please enable GeoLocation tracking for this device/website to use this service. <br> <br>
  1. Press on the "Lock" button in the Address Bar (it may also be an 'i' or another symbol on the left side) <br>
  2. Select "Permissions" <br>
  3. Enable LOCATION <br>
  4. Close this Modal, we will automatically try again.
  </div>
   <button class="mobile" type="button" {{on 'click' this.showHowToRequestGeoLocationPermission}}>
        PLEASE ENABLE GEOLOCATION
      </button>
  </ModalDialog>
{{/if}}

{{#if this.isShowingUnlockCacheForFameModal}}
  <ModalDialog @onClose={{action "toggleUnlockCacheModal"}} @targetAttachment="center" @translucentOverlay={{true}}>
    <div class="modal">
  This cache is locked! To view the messages inside, you have to unlock it, this will cost you 3 Fame.
  <br/>
  Do you want to unlock this cache?
  <br/>
  </div>
  <div>
     <button class="yesno-left" type="button" {{on 'click' this.userTriggerUnlockCache}}>
        YES
      </button>
   <button class="yesno-right" type="button" {{on 'click' this.toggleUnlockCacheModal}}>
        no
      </button>
  </div>
  </ModalDialog>
{{/if}}

{{#if this.isShowingErrorModal}}
  <ModalDialog @onClose={{action "toggleIsShowingErrorModal"}} @targetAttachment="center" @translucentOverlay={{true}}>
    <div class="modal">
{{this.appErrorMessage}}
  </div>
  </ModalDialog>
{{/if}}

